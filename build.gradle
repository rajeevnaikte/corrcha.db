buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url System.properties['user.home']+"\\repository"
        }
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.4.0"
    }
}

allprojects {
    group 'com.corrcha.db'
    version '1.0-SNAPSHOT'
    apply plugin: 'java'
    sourceCompatibility = 1.8
    apply plugin: 'net.saliman.cobertura'
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url System.properties['user.home']+"\\repository"
        }
    }
}

subprojects { subproject ->

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'
        testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.5'
        compile group: 'bsh', name: 'bsh', version: '2.0b4'
        compile group: 'com.google.guava', name: 'guava', version: '19.0'
        compile group: 'com.beust', name: 'jcommander', version: '1.60'
        compile group: 'log4j', name: 'log4j', version: '1.2.17'
        compile group: 'net.jpountz.lz4', name: 'lz4', version: '1.3.0'
        compile group: 'com.codahale.metrics', name: 'metrics-core', version: '3.0.2'
        compile group: 'io.netty', name: 'netty', version: '3.10.6.Final'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
        compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.22'
        compile group: 'org.xerial.snappy', name: 'snappy-java', version: '1.1.2.6'
    }

    test {
        reports.html.enabled = false
    }
}

def subCoberturaFiles = subprojects.collect { new File(it.projectDir, '/build/cobertura/cobertura.ser') }
def subClassesDirs = subprojects.collect { new File(it.projectDir, '/build/classes/main') }
cobertura {
    coverageFormats = [ 'xml', 'html' ]
    coverageSourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
    coverageDirs = subClassesDirs
    coverageMergeDatafiles = subCoberturaFiles
}
test.dependsOn(subprojects.test)

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

build.finalizedBy(testReport);



